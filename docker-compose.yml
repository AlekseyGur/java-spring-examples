services:

  consul:
    image: consul:1.15
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - type: bind
        source: ./config
        target: /consul/config
      # - ./configs:/consul/config # или так
    command: >
      agent
      -server
      -bootstrap
      -client=0.0.0.0
      -data-dir=/tmp/consul-data
      -ui
      -bind=0.0.0.0
      -config-dir=/consul/config
    # -server: Определяет, что узел действует как сервер.
    # -bootstrap: Включает начальное размещение, предназначенное для одиночных экземпляров.
    # -client=0.0.0.0: Разрешает подключение клиентов извне.
    # -data-dir=/tmp/consul-data: Указывает каталог хранения данных.
    # -ui: Включает веб-интерфейс управления Consul: http://localhost:8500/ui/
    # -bind=0.0.0.0: Обеспечивает привязку ко всем интерфейсам.

  first-service:
    container_name: first-service
    build: ./services/first-service
    ports:
      - 8080:8080
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  second-service:
    container_name: second-service
    build: ./services/second-service
    ports:
      - 8080:8080
    depends_on:
      consul:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  default:
    name: microservices-network